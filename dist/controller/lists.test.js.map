{"version":3,"sources":["../../src/controller/lists.test.js"],"names":["jest","mock","mockLists","lists","id","name","idBoard","test","send","listsNew","undefined","receive","callRec","getCreate","expect","length","toEqual","getUpdate","rec","toBe"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AAHAA,KAAKC,IAAL,CAAU,WAAV,EAAuB,YAAM,CAAG,CAAhC;;;AAKA,IAAMC,YAAY,qBAAlB;AACA,IAAMC,QAAQ;AACVC,QAAI,MADM;AAEVC,UAAM,KAFI;AAGVC,aAAS;AAHC,CAAd;;AAMAC,KAAK,WAAL,6DAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,wBADQ,GACD;AACTJ,4BAAI,MADK;AAETC,8BAAM,KAFG;AAGTC,iCAAS;AAHA,qBADC;AAMRG,4BANQ,GAMGC,SANH;AAAA;AAAA,2BAOQ,4BAAeR,SAAf,EAAyBO,QAAzB,EAAmCD,IAAnC,CAPR;;AAAA;AAORG,2BAPQ;AAQRC,2BARQ,GAQEV,UAAUW,SAAV,EARF;;AASdC,2BAAOF,QAAQG,MAAf,EAAuBC,OAAvB,CAA+B,CAA/B;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAYAT,KAAK,aAAL,6DAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,wBADU,GACH;AACTJ,4BAAI,MADK;AAETC,8BAAM,KAFG;AAGTC,iCAAS;AAHA,qBADG;AAAA;AAAA,2BAMM,4BAAeJ,SAAf,EAAyBC,KAAzB,EAAgCK,IAAhC,CANN;;AAAA;AAMVG,2BANU;AAOVC,2BAPU,GAOAV,UAAUe,SAAV,EAPA;;AAQhBH,2BAAOF,QAAQ,CAAR,CAAP,EAAmBI,OAAnB,CAA2BR,IAA3B;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAWAD,KAAK,oBAAL,6DAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,wBADiB,GACV;AACTJ,4BAAI,MADK;AAETC,8BAAM,KAFG;AAGTC,iCAAS;AAHA,qBADU;AAAA;AAAA,2BAML,4BAAeJ,SAAf,EAAyBC,KAAzB,EAAgCK,IAAhC,CANK;;AAAA;AAMjBU,uBANiB;;AAOvBJ,2BAAOI,GAAP,EAAYC,IAAZ,CAAiB,KAAjB;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","file":"lists.test.js","sourcesContent":["jest.mock('../models', () => { })\r\nimport mongoose from 'mongoose'\r\nimport MockLists from 'lists'\r\nimport { createnewLists } from './lists'\r\n\r\nconst mockLists = new MockLists()\r\nconst lists = {\r\n    id: \"123x\",\r\n    name: \"xxx\",\r\n    idBoard: \"456y\"\r\n}\r\n\r\ntest('new lists', async () => {\r\n    const send = {\r\n        id: \"123x\",\r\n        name: \"xxx\",\r\n        idBoard: \"456y\"\r\n    }\r\n    const listsNew = undefined\r\n    const receive = await createnewLists(mockLists,listsNew, send)\r\n    const callRec = mockLists.getCreate()\r\n    expect(callRec.length).toEqual(1)\r\n});\r\n\r\ntest('update name', async() => {\r\n    const send = {\r\n        id: \"123x\",\r\n        name: \"aaa\",\r\n        idBoard: \"456y\"\r\n    }\r\n    const receive = await createnewLists(mockLists,lists, send)\r\n    const callRec = mockLists.getUpdate()\r\n    expect(callRec[0]).toEqual(send)\r\n})\r\n\r\ntest('have lists already', async() => {\r\n    const send = {\r\n        id: \"123x\",\r\n        name: \"xxx\",\r\n        idBoard: \"456y\"\r\n    }\r\n    const rec = await createnewLists(mockLists,lists, send)\r\n    expect(rec).toBe(false)\r\n});\r\n\r\n"]}