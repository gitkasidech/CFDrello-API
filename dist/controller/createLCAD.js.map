{"version":3,"sources":["../../src/controller/createLCAD.js"],"names":["saveLCAD","req","res","next","console","log","Date","inf","body","checkInf","callInf","status","send","key","promises","idBoard","token","all","callLabels","callCards","callActions","postDateActionCards","name","listComp","colorComp","listInpr","colorInpr","listBack","colorBack","idMember"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA;AAAA,0EAAW,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBC,gCAAQC,GAAR,wCAAqCC,MAArC;AACMC,2BAFc,GAERN,IAAIO,IAFI;AAAA;AAAA,+BAGEC,SAASF,GAAT,CAHF;;AAAA;AAGdG,+BAHc;;AAAA,6BAIhBA,OAJgB;AAAA;AAAA;AAAA;;AAAA,yDAKTR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALS;;AAAA;AAOdC,2BAPc,GAOR,kCAPQ;AAQdC,gCARc,GAQH,CACb,+BAAkBP,IAAIQ,OAAtB,EAA8BF,GAA9B,EAAkCN,IAAIS,KAAtC,CADa,EAEb,6BAAiBT,IAAIQ,OAArB,EAA6BF,GAA7B,EAAiCN,IAAIS,KAArC,CAFa,EAGb,iCAAmBT,IAAIQ,OAAvB,EAA+BF,GAA/B,EAAmCN,IAAIS,KAAvC,CAHa,CARG;AAAA;AAAA,+BAa6B,kBAAQC,GAAR,CAAYH,QAAZ,CAb7B;;AAAA;AAAA;AAAA;AAabI,kCAba;AAaFC,iCAbE;AAaQC,mCAbR;AAAA;AAAA,+BAcc,4CAAsBA,WAAtB,EAAkCb,GAAlC,CAdd;;AAAA;AAcdc,2CAdc;;;AAiBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,4BAAIU,IAAJ,CAAS,IAAT;;AA/BoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAkCA,IAAMH,8BAAW,SAAXA,QAAW,CAACF,GAAD,EAAS;AAC7B,QAAI,CAACA,IAAIe,IAAL,IAAa,CAACf,IAAIQ,OAAlB,IAA6B,CAACR,IAAIgB,QAAlC,IAA8C,CAAChB,IAAIiB,SAAnD,IAAgE,CAACjB,IAAIkB,QAArE,IAAiF,CAAClB,IAAImB,SAAtF,IAAmG,CAACnB,IAAIoB,QAAxG,IAAoH,CAACpB,IAAIqB,SAAzH,IAAsI,CAACrB,IAAIsB,QAA3I,IAAuJ,CAACtB,IAAIS,KAAhK,EAAuK;AACnK,eAAO,IAAP;AACH,KAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,CANM","file":"createLCAD.js","sourcesContent":["import http from 'http'\r\nimport url from 'url'\r\nimport { checkCreateLabels } from './labels'\r\nimport { checkCreateCards } from './cards'\r\nimport { checkCreateActions } from './actions'\r\nimport { countData } from './getDateActionCards'\r\nimport { createDateActionCards } from './dateActionCards'\r\nimport {convertDates} from './convertDates'\r\n\r\nexport const saveLCAD = async (req, res, next) => {\r\n    console.log(`POST '/createlcad' ðŸ¤  ${Date()}`)\r\n    const inf = req.body\r\n    const callInf = await checkInf(inf);\r\n    if (callInf)\r\n        return res.status(500).send(\"format should be\")\r\n\r\n    const key = \"662fa775f48bd56cea11e8be634da284\"\r\n    const promises = [\r\n        checkCreateLabels(inf.idBoard,key,inf.token),\r\n        checkCreateCards(inf.idBoard,key,inf.token),\r\n        checkCreateActions(inf.idBoard,key,inf.token)\r\n    ]\r\n    const [callLabels,callCards,callActions] = await Promise.all(promises) \r\n    const postDateActionCards = await createDateActionCards(callActions,inf)\r\n\r\n\r\n    // let d = new Date()\r\n    // d.setDate(d.getDate() - 1)\r\n    // const endDate = convertDates(d)\r\n    // console.log(endDate)\r\n    // let day = d.getDay()\r\n    // d.setDate(d.getDate() - day)\r\n    // const startDate = convertDates(d)\r\n    // const data = {\r\n    //     idDashboard: inf._id,\r\n    //     start: startDate,\r\n    //     end: endDate\r\n    // }\r\n    // const getActionCards = await countData(data)\r\n    // res.json(getActionCards)\r\n    res.send(\"OK\")\r\n}\r\n\r\nexport const checkInf = (inf) => {\r\n    if (!inf.name || !inf.idBoard || !inf.listComp || !inf.colorComp || !inf.listInpr || !inf.colorInpr || !inf.listBack || !inf.colorBack || !inf.idMember || !inf.token) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n"]}