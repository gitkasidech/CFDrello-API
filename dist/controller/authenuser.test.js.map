{"version":3,"sources":["../../src/controller/authenuser.test.js"],"names":["test","expect","toBe","user","id","username","fullname","token","givenUser","rec"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;;;AAEAA,KAAK,qCAAL,EAA4C,YAAM;AAC9CC,WAAO,0BAAS;AACZ,cAAM,GADM;AAEZ,oBAAY,OAFA;AAGZ,iBAAS;AAHG,KAAT,CAAP,MAIS,KAJT;AAKH,CAND;;AAQAD,KAAK,qBAAL,EAA4B,YAAM;AAC9BC,WAAO,0BAAS;AACZ,iBAAS;AADG,KAAT,CAAP,EAEIC,IAFJ,CAES,IAFT;AAGH,CAJD;;AAMAF,KAAK,sBAAL,EAA6B,YAAM;AAC/BC,WAAO,0BAAS;AACZ,cAAM;AADM,KAAT,CAAP,EAEIC,IAFJ,CAES,IAFT;AAGH,CAJD;;AAMAF,KAAK,wBAAL,EAA+B,YAAM;AACjCC,WAAO,0BAAS;AACZ,oBAAY;AADA,KAAT,CAAP,EAEIC,IAFJ,CAES,IAFT;AAGH,CAJD;;AAMAF,KAAK,4BAAL,EAAmC,YAAM;AACrCC,WAAO,0BAAS;AACZ,cAAM,GADM;AAEZ,iBAAS;AAFG,KAAT,CAAP,EAGIC,IAHJ,CAGS,IAHT;AAIH,CALD;;AAOAF,KAAK,8BAAL,EAAqC,YAAM;AACvCC,WAAO,0BAAS;AACZ,oBAAY,OADA;AAEZ,iBAAS;AAFG,KAAT,CAAP,EAGIC,IAHJ,CAGS,IAHT;AAIH,CALD;;AAOAF,KAAK,+BAAL,EAAsC,YAAM;AACxCC,WAAO,0BAAS;AACZ,cAAM,GADM;AAEZ,oBAAY;AAFA,KAAT,CAAP,EAGIC,IAHJ,CAGS,IAHT;AAIH,CALD;;AAOAF,KAAK,sCAAL,EAA6C,YAAM;AAC/CC,WAAO,0BAAS,EAAT,CAAP,EAAqBC,IAArB,CAA0B,IAA1B;AACH,CAFD;;AAIAF,KAAK,UAAL,6DAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPG,wBADO,GACA;AACTC,4BAAI,KADK;AAETC,kCAAU,KAFD;AAGTC,kCAAU,KAHD;AAITC,+BAAO;AAJE,qBADA;AAOPC,6BAPO,GAOK;AACdJ,4BAAI,KADU;AAEdC,kCAAU,KAFI;AAGdC,kCAAU,KAHI;AAIdC,+BAAO;AAJO,qBAPL;AAAA;AAAA,2BAaK,+BAAcJ,IAAd,EAAoBK,SAApB,CAbL;;AAAA;AAaPC,uBAbO;;AAcbR,2BAAOQ,GAAP,EAAYP,IAAZ,CAAiB,KAAjB;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"authenuser.test.js","sourcesContent":["import { createnewUser, checkreq } from './authenuser'\r\nimport MockAuthens from 'authens';\r\n\r\ntest('checkreq have token,idUser,username', () => {\r\n    expect(checkreq({\r\n        \"id\": \"1\",\r\n        \"username\": \"xxxxx\",\r\n        \"token\": \"12345678\"\r\n    })) === (false);\r\n});\r\n\r\ntest('checkreq have token', () => {\r\n    expect(checkreq({\r\n        \"token\": \"12345678\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq have idUser', () => {\r\n    expect(checkreq({\r\n        \"id\": \"1\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq have username', () => {\r\n    expect(checkreq({\r\n        \"username\": \"xxxxx\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq have token,idUser', () => {\r\n    expect(checkreq({\r\n        \"id\": \"1\",\r\n        \"token\": \"12345678\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq have token,username', () => {\r\n    expect(checkreq({\r\n        \"username\": \"xxxxx\",\r\n        \"token\": \"12345678\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq have idUser,username', () => {\r\n    expect(checkreq({\r\n        \"id\": \"1\",\r\n        \"username\": \"xxxxx\"\r\n    })).toBe(true);\r\n});\r\n\r\ntest('checkreq don\\'t have idUser,username', () => {\r\n    expect(checkreq({})).toBe(true);\r\n});\r\n\r\ntest('old user', async () => {   \r\n    const user = {\r\n        id: \"001\",\r\n        username: \"xxx\",\r\n        fullname: \"yyy\",\r\n        token: \"zzz\"\r\n    }\r\n    const givenUser = {\r\n        id: \"001\",\r\n        username: \"xxx\",\r\n        fullname: \"yyy\",\r\n        token: \"zzz\"\r\n    }\r\n    const rec = await createnewUser(user, givenUser)\r\n    expect(rec).toBe(false)\r\n});\r\n\r\n// test('new user', async () => {\r\n//     const user = null\r\n//     const givenUser = {\r\n//         id: \"001\",\r\n//         username: \"xxx\",\r\n//         fullname: \"yyy\",\r\n//         token: \"zzz\"\r\n//     }\r\n//     const rec = await newUser(givenUser)\r\n//     expect(rec).toBe(true)\r\n// });\r\n\r\n\r\n\r\n"]}