{"version":3,"sources":["../../src/controller/members.js"],"names":["havedata","sendData","inf","checkreq","callcheckreq","res","status","send","findOne","id","user","createnewUser","callcreate","callBoards","token","username","app_id","idBoards","Members","body","create","fullName","newuser","toString","update","$set"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEO,IAAMA;AAAA,0EAAW,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,2BADc,GACRD,QADQ;AAAA;AAAA,+BAEOE,SAASD,GAAT,CAFP;;AAAA;AAEdE,oCAFc;;AAAA,6BAGhBA,YAHgB;AAAA;AAAA;AAAA;;AAAA,yDAITC,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAJS;;AAAA;AAAA;AAAA,+BAMD,iBAAQC,OAAR,CAAgB,EAAEC,IAAIP,IAAIO,EAAV,EAAhB,CANC;;AAAA;AAMdC,4BANc;AAAA;AAAA,+BAQKC,gCAAsBD,IAAtB,EAA4BR,GAA5B,CARL;;AAAA;AAQdU,kCARc;AAAA;AAAA,+BASK,8BAAiBV,GAAjB,CATL;;AAAA;AASdW,kCATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN,C,CAHqC;AAerC,IAAMV,8BAAW,SAAXA,QAAW,CAACD,GAAD,EAAS;AAC7B,QAAI,CAACA,IAAIY,KAAL,IAAc,CAACZ,IAAIO,EAAnB,IAAyB,CAACP,IAAIa,QAA9B,IAA0C,CAACb,IAAIc,MAA/C,IAAyD,CAACd,IAAIe,QAAlE,EAA4E;AACxE,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;;AASA,IAAMN;AAAA,2EAAgB,kBAAOO,OAAP,EAAeR,IAAf,EAAqBS,IAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACpBT,IADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAECQ,QAAQE,MAAR,CAAe;AACjCX,gCAAIU,KAAKV,EADwB;AAEjCM,sCAAUI,KAAKJ,QAFkB;AAGjCM,sCAAUF,KAAKE,QAHkB;AAIjCP,mCAAOK,KAAKL,KAJqB;AAKjCG,sCAAWE,KAAKF;AALiB,yBAAf,CAFD;;AAAA;AAEfK,+BAFe;AAAA,0DASdA,OATc;;AAAA;AAAA,8BAWhBZ,KAAKK,QAAL,IAAiBI,KAAKJ,QAAtB,IAAkCL,KAAKW,QAAL,IAAiBF,KAAKE,QAAxD,IAAqEX,KAAKO,QAAN,CAAgBM,QAAhB,MAA+BJ,KAAKF,QAAN,CAAgBM,QAAhB,EAXlF;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAYCL,QAAQM,MAAR,CAAe,EAACf,IAAIU,KAAKV,EAAV,EAAf,EAA6B,EAACgB,MAAK;AACrDV,0CAAUI,KAAKJ,QADsC;AAErDM,0CAAUF,KAAKE,QAFsC;AAGrDJ,0CAAWE,KAAKF;AAHqC,6BAAN,EAA7B,CAZD;;AAAA;AAYfK,gCAZe;AAAA,0DAiBdA,QAjBc;;AAAA;AAAA,0DAoBd,KApBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"members.js","sourcesContent":["import { Members } from '../models/members' //as rename\nimport { checkCreateBoard } from './boards'\n\nexport const havedata = async (sendData) => {\n    const inf = sendData\n    const callcheckreq = await checkreq(inf)\n    if (callcheckreq) \n        return res.status(500).send(\"format should be\")\n\n    const user = await Members.findOne({ id: inf.id })\n\n    const callcreate = await createnewUser(Members,user, inf)\n    const callBoards = await checkCreateBoard(inf)\n}\n\nexport const checkreq = (inf) => {\n    if (!inf.token || !inf.id || !inf.username || !inf.app_id || !inf.idBoards) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nexport const createnewUser = async (Members,user, body) => {\n    if (!user) {\n        const newuser = await Members.create({\n            id: body.id,\n            username: body.username,\n            fullName: body.fullName,\n            token: body.token,\n            idBoards : body.idBoards\n        })\n        return newuser\n    }\n    else if (user.username != body.username || user.fullName != body.fullName || (user.idBoards).toString() != (body.idBoards).toString()) {\n        const newuser = await Members.update({id: body.id},{$set:{\n            username: body.username,\n            fullName: body.fullName,\n            idBoards : body.idBoards\n        }})\n        return newuser\n    }\n    else \n        return false\n}"]}