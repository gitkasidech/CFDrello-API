{"version":3,"sources":["../../src/controller/members.js"],"names":["setRoute","app","post","havedata","req","res","next","console","log","body","checkreq","callcheckreq","status","send","findOne","id","user","createnewUser","callcreate","json","canAccessDashboard","fullname","fullName","token","idBoards","username","create","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAA4C;;AAErC,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,UAAT,EAAqBC,QAArB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAGA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,gCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AADoB;AAAA,+BAEOC,SAASN,IAAIK,IAAb,CAFP;;AAAA;AAEdE,oCAFc;;AAGpBJ,gCAAQC,GAAR,CAAYG,YAAZ;;AAHoB,6BAIhBA,YAJgB;AAAA;AAAA;AAAA;;AAAA,0DAKTN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALS;;AAAA;AAAA;AAAA,+BAQD,iBAAQC,OAAR,CAAgB,EAAEC,IAAIX,IAAIK,IAAJ,CAASM,EAAf,EAAhB,CARC;;AAAA;AAQdC,4BARc;;AASpBT,gCAAQC,GAAR,CAAYQ,IAAZ;;AAToB;AAAA,+BAWKC,cAAcD,IAAd,EAAoBZ,IAAIK,IAAxB,CAXL;;AAAA;AAWdS,kCAXc;;AAYpB,4BAAIA,UAAJ,EAAgB;AACZX,oCAAQC,GAAR,CAAY,0BAAZ;AACA;AACAH,gCAAIc,IAAJ,CAAS;AACLC,oDAAoB,IADf;AAELC,0CAAUjB,IAAIK,IAAJ,CAASa,QAFd;AAGLC,uCAAOnB,IAAIK,IAAJ,CAASc,KAHX;AAILC,0CAAWpB,IAAIK,IAAJ,CAASe;AAJf,6BAAT;AAMH,yBATD,MAUK;AACDjB,oCAAQC,GAAR,CAAY,uBAAZ;AACA;AACAH,gCAAIc,IAAJ,CAAS;AACLC,oDAAoB,KADf;AAELC,0CAAUjB,IAAIK,IAAJ,CAASa,QAFd;AAGLC,uCAAOnB,IAAIK,IAAJ,CAASc,KAHX;AAILC,0CAAWpB,IAAIK,IAAJ,CAASe;AAJf,6BAAT;AAMH;;AA/BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAiCA,IAAMd,8BAAW,SAAXA,QAAW,CAACD,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKc,KAAN,IAAe,CAACd,KAAKM,EAArB,IAA2B,CAACN,KAAKgB,QAArC,EAA+C;AAC3C,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMR;AAAA,2EAAgB,kBAAOD,IAAP,EAAaP,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACpBO,IADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEC,iBAAQU,MAAR,CAAe;AACjCX,gCAAIN,KAAKM,EADwB;AAEjCU,sCAAUhB,KAAKgB,QAFkB;AAGjCJ,sCAAUZ,KAAKa,QAHkB;AAIjCC,mCAAOd,KAAKc,KAJqB;AAKjCC,sCAAWf,KAAKe;AALiB,yBAAf,CAFD;;AAAA;AAEfG,+BAFe;AAAA,0DASd,IATc;;AAAA;AAAA,0DAYd,KAZc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"members.js","sourcesContent":["import { Members } from '../models/members' //as rename\n\nexport const setRoute = async (app) => {\n    app.post('/members', havedata);\n}\nexport const havedata = async (req, res, next) => {\n    console.log(req.body)\n    const callcheckreq = await checkreq(req.body);\n    console.log(callcheckreq)\n    if (callcheckreq) {\n        return res.status(500).send(\"format should be\")\n    }\n\n    const user = await Members.findOne({ id: req.body.id });\n    console.log(user)\n\n    const callcreate = await createnewUser(user, req.body);\n    if (callcreate) {\n        console.log(\"create new user complete\");\n        //add to sprint 2 query data\n        res.json({\n            canAccessDashboard: true,\n            fullname: req.body.fullName,\n            token: req.body.token,\n            idBoards : req.body.idBoards\n        });\n    }\n    else {\n        console.log(\"have a user already!!\");\n        //add to sprint 2 query data\n        res.json({\n            canAccessDashboard: false,\n            fullname: req.body.fullName,\n            token: req.body.token,\n            idBoards : req.body.idBoards\n        });\n    }\n}\nexport const checkreq = (body) => {\n    if (!body.token || !body.id || !body.username) {\n        return true\n    }\n    else {\n        return false\n    }\n}\nexport const createnewUser = async (user, body) => {\n    if (!user) {\n        const newuser = await Members.create({\n            id: body.id,\n            username: body.username,\n            fullname: body.fullName,\n            token: body.token,\n            idBoards : body.idBoards\n        })\n        return true\n    }\n    else {\n        return false\n    }\n}"]}