{"version":3,"sources":["../../src/controller/hourActionCards.js"],"names":["createHourActionCards","data","getYesterday","dataYesterday","console","log","today","Date","start","thisDate","find","dateString","actions","findOne","_id","idDashboard","dashboard","listBack","listInpr","listComp","len","length","dataHour","dataBack","dataInpr","dataComp","i","j","d","date","hour","getHours","type","indexOf","list","id","countBack","countInpr","countComp","listAfter","listBefore","allData","timeHour","hourActionCards","push","createnewHourActionCards","callHourActionCards","getHourActionCards","setDate","getDate","yesterday","dateActionCards","split","year","month","day","join","dateY","HourActionCards","create","newHourActionCards","update","$set"],"mappings":"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","file":"hourActionCards.js","sourcesContent":["import {HourActionCards} from '../models/hourActionCards'\r\nimport {Actions} from '../models/actions'\r\nimport {Dashboards} from '../models/dashboards'\r\nimport {DateActionCards} from '../models/dateActionCards'\r\nimport {convertDates} from './convertDates'\r\n\r\nexport const createHourActionCards = async(data) => {\r\n    const dataYesterday = await getYesterday(data)\r\n    console.log(dataYesterday)\r\n    let today = new Date(data.start)\r\n    let thisDate = await convertDates(today)\r\n    console.log(thisDate)\r\n    const actions =  await Actions.find({dateString: thisDate})\r\n    console.log(actions)\r\n    const dashboard = await Dashboards.findOne({_id: data.idDashboard})\r\n    console.log(dashboard)\r\n    if(!dashboard)\r\n        return \"Error!! Not found dashboard\"\r\n    const listBack = dashboard.listBack\r\n    const listInpr = dashboard.listInpr\r\n    const listComp = dashboard.listComp\r\n    const len = actions.length\r\n\r\n    let dataHour = []\r\n    let dataBack = []\r\n    let dataInpr = []\r\n    let dataComp = []\r\n\r\n    for (let i = 0; i <= 23; i++) {\r\n        for (let j = 0; j < len; j++){\r\n            const data = actions[j].data\r\n            let d = new Date(actions[j].date)\r\n            let hour = (d.getHours())\r\n            if(i==hour){\r\n                if(actions[j].type==\"createCard\"){\r\n                    if (listBack.indexOf(data.list.id) != -1) dataYesterday.countBack++\r\n                    else if (listInpr.indexOf(data.list.id) != -1) dataYesterday.countInpr++\r\n                    else if (listComp.indexOf(data.list.id) != -1) dataYesterday.countComp++\r\n                }\r\n                else if(actions[j].type==\"updateCard\" && data.listAfter && data.listBefore){\r\n                    if (listBack.indexOf(data.listAfter.id) != -1) dataYesterday.countBack++\r\n                    else if (listInpr.indexOf(data.listAfter.id) != -1) dataYesterday.countInpr++\r\n                    else if (listComp.indexOf(data.listAfter.id) != -1) dataYesterday.countComp++\r\n    \r\n                    if (listBack.indexOf(data.listBefore.id) != -1) dataYesterday.countBack--\r\n                    else if (listInpr.indexOf(data.listBefore.id) != -1) dataYesterday.countInpr--\r\n                    else if (listComp.indexOf(data.listBefore.id) != -1) dataYesterday.countComp--\r\n                }\r\n            }   \r\n        }\r\n        const allData = {\r\n            dateString: thisDate,\r\n            timeHour: i,\r\n            countBack: dataYesterday.countBack,\r\n            countInpr: dataYesterday.countInpr,\r\n            countComp: dataYesterday.countComp,\r\n            idDashboard: dashboard._id\r\n        }\r\n        const hourActionCards = await HourActionCards.findOne({ \r\n            dateString: allData.dateString, \r\n            timeHour: allData.timeHour,\r\n            idDashboard: allData.idDashboard\r\n        })\r\n        console.log(allData)\r\n        dataHour.push(i)\r\n        dataBack.push(allData.countBack)\r\n        dataInpr.push(allData.countInpr)\r\n        dataComp.push(allData.countComp)\r\n\r\n        const callHourActionCards = await createnewHourActionCards(HourActionCards,allData,hourActionCards)\r\n        // if (callHourActionCards)\r\n        //     console.log(\"create or update new HourActionCards complete\")\r\n        // else\r\n        //     console.log(\"have a HourActionCards already!!\")\r\n    }\r\n    const getHourActionCards = {\r\n        dataHour: dataHour,\r\n        dataBack: dataBack,\r\n        dataInpr: dataInpr,\r\n        dataComp: dataComp\r\n    }\r\n    return getHourActionCards\r\n}\r\n\r\nexport const getYesterday = async (data) => {\r\n    let d = new Date(data.start)\r\n    d.setDate(d.getDate() - 1)\r\n    let yesterday = await convertDates(d)\r\n    console.log(\"yesterday = \"+yesterday)\r\n    let dateActionCards = await DateActionCards.findOne({ dateString: yesterday, idDashboard: data.idDashboard})\r\n    if(!dateActionCards){\r\n        let [year, month, date, day] = yesterday.split('-')\r\n        yesterday = [year, month, date].join('-')\r\n        let dateY = new Date(yesterday)\r\n        dateActionCards = {\r\n            date: dateY,\r\n            dateString: yesterday,\r\n            countBack: 0,\r\n            countInpr: 0,\r\n            countComp: 0,\r\n            idDashboard: data.idDashboard\r\n        }\r\n    }\r\n    return dateActionCards\r\n}\r\n\r\nexport const createnewHourActionCards = async (HourActionCards,allData,hourActionCards) => {\r\n    if (!hourActionCards) {\r\n        const newHourActionCards = await HourActionCards.create(allData)\r\n        return newHourActionCards\r\n    }\r\n    else if (allData.countBack != hourActionCards.countBack || allData.countInpr != hourActionCards.countInpr || allData.countComp != hourActionCards.countComp ) {\r\n        const newHourActionCards = await HourActionCards.update({id: hourActionCards._id},{$set:{\r\n            countBack: allData.countBack,\r\n            countInpr: allData.countInpr,\r\n            countComp: allData.countComp\r\n        }})\r\n        return newHourActionCards\r\n    } \r\n    else\r\n        return false\r\n}"]}