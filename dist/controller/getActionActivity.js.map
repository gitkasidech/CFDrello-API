{"version":3,"sources":["../../src/controller/getActionActivity.js"],"names":["getActionActivity","req","res","console","log","params","idBoard","Date","find","sort","date","findActions","i","activity","d","cond2Date","cond3Date","cond3_1Date","cond3_2Date","cond4Date","hour","getHours","minute","getMinutes","now","setDate","getDate","timeago","dayAction","getDay","hourAction","minuteAction","dayCond","dateString","calTime","Math","floor","push","toObject","json"],"mappings":"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","file":"getActionActivity.js","sourcesContent":["import {Actions} from '../models/actions'\r\nimport {convertDates} from './convertDates'\r\n\r\nexport const getActionActivity = async(req, res) => {\r\n    console.log(`GET '/getactionactivity/${req.params.idBoard}' ðŸ¤  ${Date()}`)\r\n\r\n    const idBoard = req.params.idBoard\r\n    let findActions = await Actions.find({ \"data.board.id\": idBoard }).sort({date: -1})  //now to ago\r\n    let i = 0\r\n    let activity = []\r\n\r\n    let d = new Date() \r\n    let cond2Date = new Date() \r\n    let cond3Date = new Date() \r\n    let cond3_1Date = new Date()\r\n    let cond3_2Date = new Date()\r\n    let cond4Date = new Date()\r\n\r\n    let hour = (d.getHours())\r\n    let minute = (d.getMinutes())\r\n    const now = convertDates(d)\r\n    d.setDate(d.getDate() -90)\r\n    cond2Date.setDate(cond2Date.getDate()-7)\r\n    cond3Date.setDate(cond3Date.getDate()-30)\r\n    cond3_1Date.setDate(cond3Date.getDate()-14)\r\n    cond3_2Date.setDate(cond3Date.getDate()-21)\r\n    cond4Date.setDate(cond4Date.getDate()-60)\r\n    let timeago\r\n    while(findActions[i].date >= d){\r\n        let dayAction = (findActions[i].date.getDay())\r\n        let hourAction = (findActions[i].date.getHours())\r\n        let minuteAction = (findActions[i].date.getMinutes())\r\n        let dayCond = (cond2Date.getDay())\r\n        \r\n        if(findActions[i].dateString == now){\r\n            let calTime = (hour*60+minute) - (hourAction*60+minuteAction)\r\n            if(calTime>=60) \r\n                timeago = Math.floor(calTime/60) + \" hour ago\"\r\n            else\r\n                timeago = calTime + \" minute ago\"\r\n        }\r\n        else if(cond2Date < findActions[i].date){\r\n            if(cond2Date.getDate()  == findActions[i].date.getDate())\r\n                timeago = \"6 day ago\"\r\n            else if(dayAction<dayCond)\r\n                timeago = dayCond-dayAction + \" day ago\"\r\n            else\r\n                timeago = (7-dayAction+dayCond) + \" day ago\"\r\n        }\r\n        else if(cond3Date < findActions[i].date){\r\n            if(cond3_1Date<findActions[i].date)\r\n                timeago = \"1 week ago\"\r\n            else if(cond3_2Date<findActions[i].date)\r\n                timeago = \"2 week ago\"\r\n            else\r\n                timeago = \"3 week ago\"\r\n        }\r\n        else{\r\n            if(cond4Date<findActions[i].date)\r\n                timeago = \"1 month ago\"\r\n            else\r\n                timeago = \"2 month ago\"\r\n        }\r\n        //toObject make use object from query mongo\r\n        activity.push(findActions[i].toObject())\r\n        activity[i].timeago = timeago\r\n        i++\r\n    }\r\n    res.json(activity)\r\n}\r\n\r\n"]}