{"version":3,"sources":["../../src/controller/dateActionCards.js"],"names":["createDateActionCards","dateStart","dashboard","now","Date","countBack","countInpr","countComp","d","ymd","find","dateString","dataThisDay","len","length","listBack","listInpr","listComp","dateAction","i","data","type","indexOf","list","id","date","listAfter","listBefore","allData","idDashboard","_id","findOne","dateActionCards","createnewDateActionCards","callDateActionCards","setDate","getDate","DateActionCards","create","newDateActionCards","update","$set"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,IAAMA;AAAA,0EAAwB,iBAAMC,SAAN,EAAgBC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,2BAD2B,GACrB,IAAIC,IAAJ,EADqB;AAE7BC,iCAF6B,GAEjB,CAFiB;AAG7BC,iCAH6B,GAGjB,CAHiB;AAI7BC,iCAJ6B,GAIjB,CAJiB;AAKxBC,yBALwB,GAKpB,IAAIJ,IAAJ,CAASH,SAAT,CALoB;;AAAA;AAAA,8BAKCO,KAAKL,GALN;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAMX,gCAAaK,CAAb,CANW;;AAAA;AAMvBC,2BANuB;AAAA;AAAA,+BAOF,iBAAQC,IAAR,CAAa,EAACC,YAAYF,GAAb,EAAb,CAPE;;AAAA;AAOvBG,mCAPuB;AAQvBC,2BARuB,GAQjBD,YAAYE,MARK;AASvBC,gCATuB,GASZb,UAAUa,QATE;AAUvBC,gCAVuB,GAUZd,UAAUc,QAVE;AAWvBC,gCAXuB,GAWZf,UAAUe,QAXE;AAYzBC,kCAZyB,GAYZV,CAZY;;AAa7B,6BAAQW,CAAR,GAAU,CAAV,EAAYA,IAAEN,GAAd,EAAkBM,GAAlB,EAAsB;AACZC,gCADY,GACLR,YAAYO,CAAZ,EAAeC,IADV;;AAElB,gCAAGR,YAAYO,CAAZ,EAAeE,IAAf,IAAqB,YAAxB,EAAqC;AACjC,oCAAIN,SAASO,OAAT,CAAiBF,KAAKG,IAAL,CAAUC,EAA3B,KAAkC,CAAC,CAAvC,EAA0CnB,YAA1C,KACK,IAAIW,SAASM,OAAT,CAAiBF,KAAKG,IAAL,CAAUC,EAA3B,KAAkC,CAAC,CAAvC,EAA0ClB,YAA1C,KACA,IAAIW,SAASK,OAAT,CAAiBF,KAAKG,IAAL,CAAUC,EAA3B,KAAkC,CAAC,CAAvC,EAA0CjB;AAC/CW,6CAAaN,YAAYO,CAAZ,EAAeM,IAA5B;AACH,6BALD,MAMK,IAAGb,YAAYO,CAAZ,EAAeE,IAAf,IAAqB,YAArB,IAAqCD,KAAKM,SAA1C,IAAuDN,KAAKO,UAA/D,EAA0E;AAC3E,oCAAIZ,SAASO,OAAT,CAAiBF,KAAKM,SAAL,CAAeF,EAAhC,KAAuC,CAAC,CAA5C,EAA+CnB,YAA/C,KACK,IAAIW,SAASM,OAAT,CAAiBF,KAAKM,SAAL,CAAeF,EAAhC,KAAuC,CAAC,CAA5C,EAA+ClB,YAA/C,KACA,IAAIW,SAASK,OAAT,CAAiBF,KAAKM,SAAL,CAAeF,EAAhC,KAAuC,CAAC,CAA5C,EAA+CjB;;AAEpD,oCAAIQ,SAASO,OAAT,CAAiBF,KAAKO,UAAL,CAAgBH,EAAjC,KAAwC,CAAC,CAA7C,EAAgDnB,YAAhD,KACK,IAAIW,SAASM,OAAT,CAAiBF,KAAKO,UAAL,CAAgBH,EAAjC,KAAwC,CAAC,CAA7C,EAAgDlB,YAAhD,KACA,IAAIW,SAASK,OAAT,CAAiBF,KAAKO,UAAL,CAAgBH,EAAjC,KAAwC,CAAC,CAA7C,EAAgDjB;AACrDW,6CAAaN,YAAYO,CAAZ,EAAeM,IAA5B;AACH;AACJ;AACKG,+BAhCuB,GAgCb;AACZH,kCAAMP,UADM;AAEZP,wCAAYF,GAFA;AAGZJ,uCAAWA,SAHC;AAIZC,uCAAWA,SAJC;AAKZC,uCAAWA,SALC;AAMZsB,yCAAa3B,UAAU4B;AANX,yBAhCa;AAAA;AAAA,+BAwCC,iCAAgBC,OAAhB,CAAwB,EAAEpB,YAAYiB,QAAQjB,UAAtB,EAAkCkB,aAAaD,QAAQC,WAAvD,EAAxB,CAxCD;;AAAA;AAwCvBG,uCAxCuB;AAAA;AAAA,+BAyCKC,2DAAyCL,OAAzC,EAAiDI,eAAjD,CAzCL;;AAAA;AAyCvBE,2CAzCuB;;AAAA;AAKW1B,0BAAE2B,OAAF,CAAU3B,EAAE4B,OAAF,KAAc,CAAxB,CALX;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAiDA,IAAMH;AAAA,2EAA2B,kBAAOI,eAAP,EAAuBT,OAAvB,EAA+BI,eAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC/BA,eAD+B;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAECK,gBAAgBC,MAAhB,CAAuBV,OAAvB,CAFD;;AAAA;AAE1BW,0CAF0B;AAAA,0DAGzBA,kBAHyB;;AAAA;AAAA,8BAK3BX,QAAQvB,SAAR,IAAqB2B,gBAAgB3B,SAArC,IAAkDuB,QAAQtB,SAAR,IAAqB0B,gBAAgB1B,SAAvF,IAAoGsB,QAAQrB,SAAR,IAAqByB,gBAAgBzB,SAL9G;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAMC8B,gBAAgBG,MAAhB,CAAuB,EAAChB,IAAIQ,gBAAgBF,GAArB,EAAvB,EAAiD,EAACW,MAAK;AACpFpC,2CAAWuB,QAAQvB,SADiE;AAEpFC,2CAAWsB,QAAQtB,SAFiE;AAGpFC,2CAAWqB,QAAQrB;AAHiE,6BAAN,EAAjD,CAND;;AAAA;AAM1BgC,2CAN0B;AAAA,0DAWzBA,mBAXyB;;AAAA;AAAA,0DAczB,KAdyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"dateActionCards.js","sourcesContent":["import {DateActionCards} from '../models/dateActionCards'\r\nimport {Actions} from '../models/actions'\r\nimport {convertDates} from './convertDates'\r\n\r\nexport const createDateActionCards = async(dateStart,dashboard) => {\r\n    const now = new Date()\r\n    let countBack = 0 \r\n    let countInpr = 0\r\n    let countComp = 0\r\n    for (let d = new Date(dateStart); d <= now; d.setDate(d.getDate() + 1)) {\r\n        const ymd = await convertDates(d)\r\n        const dataThisDay =  await Actions.find({dateString: ymd})\r\n        const len = dataThisDay.length\r\n        const listBack = dashboard.listBack\r\n        const listInpr = dashboard.listInpr\r\n        const listComp = dashboard.listComp\r\n        let dateAction = d\r\n        for(let i=0;i<len;i++){\r\n            const data = dataThisDay[i].data\r\n            if(dataThisDay[i].type==\"createCard\"){\r\n                if (listBack.indexOf(data.list.id) != -1) countBack++\r\n                else if (listInpr.indexOf(data.list.id) != -1) countInpr++\r\n                else if (listComp.indexOf(data.list.id) != -1) countComp++\r\n                dateAction = dataThisDay[i].date\r\n            }\r\n            else if(dataThisDay[i].type==\"updateCard\" && data.listAfter && data.listBefore){\r\n                if (listBack.indexOf(data.listAfter.id) != -1) countBack++\r\n                else if (listInpr.indexOf(data.listAfter.id) != -1) countInpr++\r\n                else if (listComp.indexOf(data.listAfter.id) != -1) countComp++\r\n\r\n                if (listBack.indexOf(data.listBefore.id) != -1) countBack--\r\n                else if (listInpr.indexOf(data.listBefore.id) != -1) countInpr--\r\n                else if (listComp.indexOf(data.listBefore.id) != -1) countComp--\r\n                dateAction = dataThisDay[i].date\r\n            }\r\n        }\r\n        const allData = {\r\n            date: dateAction,\r\n            dateString: ymd,\r\n            countBack: countBack,\r\n            countInpr: countInpr,\r\n            countComp: countComp,\r\n            idDashboard: dashboard._id\r\n        }\r\n        const dateActionCards = await DateActionCards.findOne({ dateString: allData.dateString, idDashboard: allData.idDashboard})\r\n        const callDateActionCards = await createnewDateActionCards(DateActionCards,allData,dateActionCards)\r\n        // if (callDateActionCards)\r\n        //     console.log(\"create or update new DateActionCards complete\")\r\n        // else\r\n        //     console.log(\"have a DateActionCards already!!\")\r\n    }\r\n}\r\n\r\nexport const createnewDateActionCards = async (DateActionCards,allData,dateActionCards) => {\r\n    if (!dateActionCards) {\r\n        const newDateActionCards = await DateActionCards.create(allData)\r\n        return newDateActionCards\r\n    }\r\n    else if (allData.countBack != dateActionCards.countBack || allData.countInpr != dateActionCards.countInpr || allData.countComp != dateActionCards.countComp ) {\r\n        const newDateActionCards = await DateActionCards.update({id: dateActionCards._id},{$set:{\r\n            countBack: allData.countBack,\r\n            countInpr: allData.countInpr,\r\n            countComp: allData.countComp\r\n        }})\r\n        return newDateActionCards\r\n    } \r\n    else\r\n        return false\r\n}\r\n\r\n"]}