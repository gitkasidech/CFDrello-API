{"version":3,"sources":["../../src/controller/getDateActionCards.js"],"names":["dayCountCards","req","res","next","console","log","params","idDashboard","start","end","Date","data","hourActionCards","json","countData","getDateActionCards","listDate","listBack","listInpr","listComp","d","ymdd","findOne","dateString","dateActionCards","countBack","countInpr","countComp","split","year","month","date","day","join","push","setDate","getDate"],"mappings":"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","file":"getDateActionCards.js","sourcesContent":["import {DateActionCards} from '../models/dateActionCards'\r\nimport {convertDates} from './convertDates'\r\nimport {createHourActionCards} from './hourActionCards'\r\n\r\nexport const dayCountCards = async (req, res, next) => {\r\n    console.log(`GET '/dateactioncards/${req.params.idDashboard}/${req.params.start}/${req.params.end}' ğŸ¤  ${Date()}`)\r\n    console.log(req.params.start)\r\n    console.log(req.params.end)\r\n\r\n    const data = {\r\n        idDashboard: req.params.idDashboard,\r\n        start: req.params.start,\r\n        end: req.params.end\r\n    }\r\n    if(data.start == data.end && req.params.end !=1){\r\n        const hourActionCards = await createHourActionCards(data)\r\n        res.json(hourActionCards)\r\n    }\r\n    else{\r\n        const getDateActionCards = await countData(data)\r\n        res.json(getDateActionCards)\r\n    }  \r\n}\r\n\r\nexport const countData = async (data) => {\r\n    let start = data.start\r\n    let end = data.end\r\n    let listDate = []\r\n    let listBack = []\r\n    let listInpr = []\r\n    let listComp = []\r\n    for (let d = new Date(start); d <= new Date(end); d.setDate(d.getDate() + 1)) {\r\n        let ymdd = await convertDates(d)\r\n        let dateActionCards = await DateActionCards.findOne({ dateString: ymdd, idDashboard: data.idDashboard})\r\n        if(!dateActionCards){\r\n            dateActionCards = {\r\n                dateString: ymdd,\r\n                countBack: 0,\r\n                countInpr: 0,\r\n                countComp: 0\r\n            }\r\n        }\r\n        let [year, month, date, day] = ymdd.split('-')\r\n        dateActionCards.dateString = [year, month, date].join('-')\r\n        listDate.push(dateActionCards.dateString)\r\n        listBack.push(dateActionCards.countBack)\r\n        listInpr.push(dateActionCards.countInpr)\r\n        listComp.push(dateActionCards.countComp)\r\n    }\r\n    const getDateActionCards = {\r\n        listDate: listDate,\r\n        listBack: listBack,\r\n        listInpr: listInpr,\r\n        listComp: listComp\r\n    }\r\n    return getDateActionCards\r\n}\r\n\r\n\r\n"]}