{"version":3,"sources":["../../src/controller/getDateActionCards.js"],"names":["dayCountCards","req","res","next","console","log","params","idDashboard","start","end","Date","data","hourActionCards","json","countData","getDateActionCards","listDate","listBack","listInpr","listComp","d","ymdd","findOne","dateString","dateActionCards","countBack","countInpr","countComp","split","year","month","date","day","join","push","setDate","getDate"],"mappings":"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","file":"getDateActionCards.js","sourcesContent":["import {DateActionCards} from '../models/dateActionCards'\nimport {convertDates} from './convertDates'\nimport {createHourActionCards} from './hourActionCards'\n\nexport const dayCountCards = async (req, res, next) => {\n    console.log(`GET '/dateactioncards/${req.params.idDashboard}/${req.params.start}/${req.params.end}' ðŸ¤  ${Date()}`)\n    console.log(req.params.start)\n    console.log(req.params.end)\n\n    const data = {\n        idDashboard: req.params.idDashboard,\n        start: req.params.start,\n        end: req.params.end\n    }\n    if(data.start == data.end){\n        const hourActionCards = await createHourActionCards(data)\n        res.json(hourActionCards)\n    }\n    else{\n        const getDateActionCards = await countData(data)\n        res.json(getDateActionCards)\n    }  \n}\n\nexport const countData = async (data) => {\n    if(data.start == data.end){\n        const hourActionCards = await createHourActionCards(data)\n        return hourActionCards\n    }\n    let start = data.start\n    let end = data.end\n    let listDate = []\n    let listBack = []\n    let listInpr = []\n    let listComp = []\n    for (let d = new Date(start); d <= new Date(end); d.setDate(d.getDate() + 1)) {\n        let ymdd = await convertDates(d)\n        let dateActionCards = await DateActionCards.findOne({ dateString: ymdd, idDashboard: data.idDashboard})\n        if(!dateActionCards){\n            dateActionCards = {\n                dateString: ymdd,\n                countBack: 0,\n                countInpr: 0,\n                countComp: 0\n            }\n        }\n        let [year, month, date, day] = ymdd.split('-')\n        dateActionCards.dateString = [year, month, date].join('-')\n        listDate.push(dateActionCards.dateString)\n        listBack.push(dateActionCards.countBack)\n        listInpr.push(dateActionCards.countInpr)\n        listComp.push(dateActionCards.countComp)\n    }\n    const getDateActionCards = {\n        listDate: listDate,\n        listBack: listBack,\n        listInpr: listInpr,\n        listComp: listComp\n    }\n    return getDateActionCards\n}\n\n\n"]}