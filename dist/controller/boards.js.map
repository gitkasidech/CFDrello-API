{"version":3,"sources":["../../src/controller/boards.js"],"names":["setRoute","app","post","havedata","req","res","next","console","log","body","checkreq","callcheckreq","status","send","findOne","id","boards","createnewBoards","callcreate","json","createBoards","name","create","newboards"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEO,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,SAAT,EAAoBC,QAApB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAGA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,gCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AADoB;AAAA,+BAEOC,SAASN,IAAIK,IAAb,CAFP;;AAAA;AAEdE,oCAFc;;AAGpBJ,gCAAQC,GAAR,CAAYG,YAAZ;;AAHoB,6BAIhBA,YAJgB;AAAA;AAAA;AAAA;;AAAA,0DAKTN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALS;;AAAA;AAAA;AAAA,+BAQC,eAAOC,OAAP,CAAe,EAAEC,IAAIX,IAAIK,IAAJ,CAASM,EAAf,EAAf,CARD;;AAAA;AAQdC,8BARc;;AASpBT,gCAAQC,GAAR,CAAYQ,MAAZ;;AAToB;AAAA,+BAWKC,gBAAgBD,MAAhB,EAAwBZ,IAAIK,IAA5B,CAXL;;AAAA;AAWdS,kCAXc;;AAYpB,4BAAIA,UAAJ,EAAgB;AACZX,oCAAQC,GAAR,CAAY,4BAAZ;AACA;AACAH,gCAAIc,IAAJ,CAAS;AACLC,8CAAc,IADT;AAELL,oCAAIX,IAAIK,IAAJ,CAASM,EAFR;AAGLM,sCAAMjB,IAAIK,IAAJ,CAASY;AAHV,6BAAT;AAKH,yBARD,MASK;AACDd,oCAAQC,GAAR,CAAY,uBAAZ;AACA;AACAH,gCAAIc,IAAJ,CAAS;AACLC,8CAAc,KADT;AAELL,oCAAIX,IAAIK,IAAJ,CAASM,EAFR;AAGLM,sCAAMjB,IAAIK,IAAJ,CAASY;AAHV,6BAAT;AAKH;;AA7BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AA+BA,IAAMX,8BAAW,SAAXA,QAAW,CAACD,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKM,EAAN,IAAY,CAACN,KAAKY,IAAtB,EAA4B;AACxB,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMJ;AAAA,2EAAkB,kBAAOD,MAAP,EAAeP,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACtBO,MADsB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEC,eAAOM,MAAP,CAAc;AAClCP,gCAAIN,KAAKM,EADyB;AAElCM,kCAAMZ,KAAKY;AAFuB,yBAAd,CAFD;;AAAA;AAEjBE,iCAFiB;AAAA,0DAMhB,IANgB;;AAAA;AAAA,0DAShB,KATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"boards.js","sourcesContent":["import { Boards } from '../models/boards' \n\nexport const setRoute = async (app) => {\n    app.post('/boards', havedata);\n}\nexport const havedata = async (req, res, next) => {\n    console.log(req.body)\n    const callcheckreq = await checkreq(req.body);\n    console.log(callcheckreq)\n    if (callcheckreq) {\n        return res.status(500).send(\"format should be\")\n    }\n\n    const boards = await Boards.findOne({ id: req.body.id });\n    console.log(boards)\n\n    const callcreate = await createnewBoards(boards, req.body);\n    if (callcreate) {\n        console.log(\"create new boards complete\");\n        //add to sprint 2 query data\n        res.json({\n            createBoards: true,\n            id: req.body.id,\n            name: req.body.name\n        });\n    }\n    else {\n        console.log(\"have boards already!!\");\n        //add to sprint 2 query data\n        res.json({\n            createBoards: false,\n            id: req.body.id,\n            name: req.body.name\n        });\n    }\n}\nexport const checkreq = (body) => {\n    if (!body.id || !body.name) {\n        return true\n    }\n    else {\n        return false\n    }\n}\nexport const createnewBoards = async (boards, body) => {\n    if (!boards) {\n        const newboards = await Boards.create({\n            id: body.id,\n            name: body.name\n        })\n        return true\n    }\n    else {\n        return false\n    }\n}"]}