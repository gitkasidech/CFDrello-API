{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","console","log","body","checkreq","callcheckreq","status","send","users","findOne","idUser","id","user","createnewUser","callcreate","json","canAccessDashboard","fullname","fullName","token","username","create","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACAC,gCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AAFoB;AAAA,+BAGOC,SAASN,IAAIK,IAAb,CAHP;;AAAA;AAGdE,oCAHc;;AAIpBJ,gCAAQC,GAAR,CAAYG,YAAZ;;AAJoB,6BAKhBA,YALgB;AAAA;AAAA;AAAA;;AAAA,0DAMTN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CANS;;AAAA;AASdC,6BATc,GASN,4BAAgBV,IAAIK,IAApB,CATM;AAAA;AAAA,+BAUD,wBAAYM,OAAZ,CAAoB,EAAEC,QAAQZ,IAAIK,IAAJ,CAASQ,EAAnB,EAApB,CAVC;;AAAA;AAUdC,4BAVc;;AAWpBX,gCAAQC,GAAR,CAAYU,IAAZ;;AAXoB;AAAA,+BAaKC,cAAcD,IAAd,EAAoBd,IAAIK,IAAxB,CAbL;;AAAA;AAadW,kCAbc;;AAcpB,4BAAIA,UAAJ,EAAgB;AACZb,oCAAQC,GAAR,CAAY,0BAAZ;AACA;AACAH,gCAAIgB,IAAJ,CAAS;AACLC,oDAAoB,IADf;AAELC,0CAAUnB,IAAIK,IAAJ,CAASe,QAFd;AAGLC,uCAAOrB,IAAIK,IAAJ,CAASgB;AAHX,6BAAT;AAKH,yBARD,MASK;AACDlB,oCAAQC,GAAR,CAAY,uBAAZ;AACA;AACAH,gCAAIgB,IAAJ,CAAS;AACLC,oDAAoB,KADf;AAELC,0CAAUnB,IAAIK,IAAJ,CAASe,QAFd;AAGLC,uCAAOrB,IAAIK,IAAJ,CAASgB;AAHX,6BAAT;AAKH;;AA/BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAiCA,IAAMf,8BAAW,SAAXA,QAAW,CAACD,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKgB,KAAN,IAAe,CAAChB,KAAKQ,EAArB,IAA2B,CAACR,KAAKiB,QAArC,EAA+C;AAC3C,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMP;AAAA,2EAAgB,kBAAOD,IAAP,EAAaT,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGpBS,IAHoB;AAAA;AAAA;AAAA;;AAIfJ,6BAJe,GAIP,4BAAgBL,IAAhB,CAJO;AAAA;AAAA,+BAKC,wBAAYkB,MAAZ,CAAmB;AACrCX,oCAAQP,KAAKQ,EADwB;AAErCS,sCAAUjB,KAAKiB,QAFsB;AAGrCH,sCAAUd,KAAKe,QAHsB;AAIrCC,mCAAOhB,KAAKgB;AAJyB,yBAAnB,CALD;;AAAA;AAKfG,+BALe;AAAA,0DAWd,IAXc;;AAAA;AAAA,0DAcd,KAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    console.log(req.body)\r\n    const callcheckreq = await checkreq(req.body);\r\n    console.log(callcheckreq)\r\n    if (callcheckreq) {\r\n        return res.status(500).send(\"format should be\")\r\n    }\r\n\r\n    const users = new AuthenUsers(req.body);\r\n    const user = await AuthenUsers.findOne({ idUser: req.body.id });\r\n    console.log(user)\r\n\r\n    const callcreate = await createnewUser(user, req.body);\r\n    if (callcreate) {\r\n        console.log(\"create new user complete\");\r\n        //add to sprint 2 query data\r\n        res.json({\r\n            canAccessDashboard: true,\r\n            fullname: req.body.fullName,\r\n            token: req.body.token\r\n        });\r\n    }\r\n    else {\r\n        console.log(\"have a user already!!\");\r\n        //add to sprint 2 query data\r\n        res.json({\r\n            canAccessDashboard: false,\r\n            fullname: req.body.fullName,\r\n            token: req.body.token\r\n        });\r\n    }\r\n}\r\nexport const checkreq = (body) => {\r\n    if (!body.token || !body.id || !body.username) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (user, body) => {\r\n    // const users = new AuthenUsers(body);\r\n    // const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const users = new AuthenUsers(body)\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullName,\r\n            token: body.token\r\n        })\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}