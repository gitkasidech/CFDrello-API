<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","checkreq","body","callcheckreq","status","send","createnewUser","callcreate","json","canAccessDashboard","token","id","username","users","findOne","idUser","user","create","fullname","newuser","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGOC,SAASH,IAAII,IAAb,CAHP;;AAAA;AAGdC,oCAHc;;AAAA,6BAIhBA,YAJgB;AAAA;AAAA;AAAA;;AAAA,0DAKTJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALS;;AAAA;AAAA;AAAA,+BAOKC,cAAcR,IAAII,IAAlB,CAPL;;AAAA;AAOdK,kCAPc;;AAQpB,4BAAIA,UAAJ,EAAgB;AACZR,gCAAIS,IAAJ,CAAS,EAAEC,oBAAoB,IAAtB,EAAT;AACH,yBAFD,MAGK;AACDV,gCAAIS,IAAJ,CAAS,EAAEC,oBAAoB,KAAtB,EAAT,EAAwC;AAC3C;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAgBA,IAAMR,8BAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKQ,KAAN,IAAe,CAACR,KAAKS,EAArB,IAA2B,CAACT,KAAKU,QAArC,EAA+C;AAC3C,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMN;AAAA,2EAAgB,kBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBW,6BADmB,GACX,4BAAgBX,IAAhB,CADW;AAAA;AAAA,+BAEN,wBAAYY,OAAZ,CAAoB,EAAEC,QAAQb,KAAKS,EAAf,EAApB,CAFM;;AAAA;AAEnBK,4BAFmB;;AAAA,4BAGpBA,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIC,wBAAYC,MAAZ,CAAmB;AACrCF,oCAAQb,KAAKS,EADwB;AAErCC,sCAAUV,KAAKU,QAFsB;AAGrCM,sCAAUhB,KAAKgB,QAHsB;AAIrCR,mCAAOR,KAAKQ;AAJyB,yBAAnB,CAJD;;AAAA;AAIfS,+BAJe;;AAUrB;AACAC,gCAAQC,GAAR,CAAY,cAAZ;AACA;AAZqB,0DAad,IAbc;;AAAA;AAgBrBD,gCAAQC,GAAR,CAAY,uBAAZ;AACA;AAjBqB,0DAkBd,KAlBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAsBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    // const {idUser, username, fullname, token, email} = json;\r\n    const callcheckreq = await checkreq(req.body);\r\n    if (callcheckreq) {\r\n        return res.status(500).send(\"format should be\")\r\n    }\r\n    const callcreate = await createnewUser(req.body);\r\n    if (callcreate) {\r\n        res.json({ canAccessDashboard: true });\r\n    }\r\n    else {\r\n        res.json({ canAccessDashboard: false });;\r\n    }\r\n\r\n}\r\nexport const checkreq = (body) => {\r\n    if (!body.token || !body.id || !body.username) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (body) => {\r\n    const users = new AuthenUsers(body);\r\n    const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullname,\r\n            token: body.token\r\n        });\r\n        //res.json(users);\r\n        console.log(\"add complete\");\r\n        // res.send('<h1>add New dashboard</h1>');\r\n        return true\r\n    }\r\n    else {\r\n        console.log(\"have a user already!!\");\r\n        // res.send('<h1>dashboard</h1>');\r\n        return false\r\n    }\r\n}\r\n\r\n// export const authenuserController = async (req, res, next) => {\r\n//         // const json = req.body\r\n//         // const {idUser, username, fullname, token, email} = json;\r\n//         if (!req.body.token||!req.body.idUser||!req.body.username) {\r\n//             res.status(500).send(\"format should be\")\r\n//         }\r\n//         else{\r\n//             const users = new AuthenUser(req.body); \r\n//             const user = await AuthenUser.findOne({idUser: req.body.idUser});\r\n//             if(!user){\r\n//                 const newuser = await AuthenUser.create({\r\n//                 idUser: req.body.idUser,\r\n//                 username: req.body.username,\r\n//                 fullname: req.body.fullname,\r\n//                 token: req.body.token,\r\n//                 email: req.body.email\r\n//             });\r\n//             //res.json(users);\r\n//             console.log(\"add complete\");\r\n//             res.send('<h1>add New dashboard</h1>');\r\n//             }\r\n//             else{\r\n//                 console.log(\"have a user already!!\");\r\n//                 res.send('<h1>dashboard</h1>');\r\n//             }\r\n//         }\r\n\r\n// }\r\n\r\n"]}
=======
{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","checkreq","body","callcheckreq","json","dontHaveToken","createnewUser","callcreate","console","log","token","users","findOne","idUser","id","user","create","username","fullname","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGOC,SAASH,IAAII,IAAb,CAHP;;AAAA;AAGdC,oCAHc;;AAAA,6BAIhBA,YAJgB;AAAA;AAAA;AAAA;;AAKhB;AACAJ,4BAAIK,IAAJ,CAAS,EAAEC,eAAe,IAAjB,EAAT;AANgB;AAAA;;AAAA;AAAA;AAAA,+BASSC,cAAcR,IAAII,IAAlB,CATT;;AAAA;AASVK,kCATU;;AAUhB,4BAAIA,UAAJ,EAAgB;AACZC,oCAAQC,GAAR,CAAY,0BAAZ;AACAV,gCAAIK,IAAJ,CAAS,EAAEC,eAAe,KAAjB,EAAT;AACH,yBAHD,MAIK;AACDG,oCAAQC,GAAR,CAAY,uBAAZ;AACAV,gCAAIK,IAAJ,CAAS,EAAEC,eAAe,KAAjB,EAAT;AACH;;AAjBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAoBA,IAAMJ,8BAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKQ,KAAV,EAAiB;AACb,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMJ;AAAA,2EAAgB,kBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBS,6BADmB,GACX,4BAAgBT,IAAhB,CADW;AAAA;AAAA,+BAEN,wBAAYU,OAAZ,CAAoB,EAAEC,QAAQX,KAAKY,EAAf,EAApB,CAFM;;AAAA;AAEnBC,4BAFmB;;AAAA,4BAGpBA,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIC,wBAAYC,MAAZ,CAAmB;AACrCH,oCAAQX,KAAKY,EADwB;AAErCG,sCAAUf,KAAKe,QAFsB;AAGrCC,sCAAUhB,KAAKgB,QAHsB;AAIrCR,mCAAOR,KAAKQ;AAJyB,yBAAnB,CAJD;;AAAA;AAIfS,+BAJe;AAAA,0DAUd,IAVc;;AAAA;AAAA,0DAad,KAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    // const {idUser, username, fullname, token, email} = json;\r\n    const callcheckreq = await checkreq(req.body);\r\n    if (callcheckreq) {\r\n        //return res.status(500).send(\"format should be\")\r\n        res.json({ dontHaveToken: true });\r\n    }\r\n    else {\r\n        const callcreate = await createnewUser(req.body);\r\n        if (callcreate) {\r\n            console.log(\"create new user complete\");\r\n            res.json({ dontHaveToken: false });\r\n        }\r\n        else {\r\n            console.log(\"have a user already!!\");\r\n            res.json({ dontHaveToken: false });\r\n        }\r\n    }\r\n}\r\nexport const checkreq = (body) => {\r\n    if (!body.token) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (body) => {\r\n    const users = new AuthenUsers(body);\r\n    const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullname,\r\n            token: body.token\r\n        });\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\n// export const authenuserController = async (req, res, next) => {\r\n//         // const json = req.body\r\n//         // const {idUser, username, fullname, token, email} = json;\r\n//         if (!req.body.token||!req.body.idUser||!req.body.username) {\r\n//             res.status(500).send(\"format should be\")\r\n//         }\r\n//         else{\r\n//             const users = new AuthenUser(req.body); \r\n//             const user = await AuthenUser.findOne({idUser: req.body.idUser});\r\n//             if(!user){\r\n//                 const newuser = await AuthenUser.create({\r\n//                 idUser: req.body.idUser,\r\n//                 username: req.body.username,\r\n//                 fullname: req.body.fullname,\r\n//                 token: req.body.token,\r\n//                 email: req.body.email\r\n//             });\r\n//             //res.json(users);\r\n//             console.log(\"add complete\");\r\n//             res.send('<h1>add New dashboard</h1>');\r\n//             }\r\n//             else{\r\n//                 console.log(\"have a user already!!\");\r\n//                 res.send('<h1>dashboard</h1>');\r\n//             }\r\n//         }\r\n\r\n// }\r\n\r\n"]}
>>>>>>> unittest
=======
{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","checkreq","body","callcheckreq","status","send","createnewUser","callcreate","console","log","json","canAccessDashboard","token","id","username","users","findOne","idUser","user","create","fullname","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGOC,SAASH,IAAII,IAAb,CAHP;;AAAA;AAGdC,oCAHc;;AAAA,6BAIhBA,YAJgB;AAAA;AAAA;AAAA;;AAAA,0DAKTJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALS;;AAAA;AAAA;AAAA,+BAQKC,cAAcR,IAAII,IAAlB,CARL;;AAAA;AAQdK,kCARc;;AASpB,4BAAIA,UAAJ,EAAgB;AACZC,oCAAQC,GAAR,CAAY,0BAAZ;AACAV,gCAAIW,IAAJ,CAAS,EAAEC,oBAAoB,IAAtB,EAAT;AACH,yBAHD,MAIK;AACDH,oCAAQC,GAAR,CAAY,uBAAZ;AACAV,gCAAIW,IAAJ,CAAS,EAAEC,oBAAoB,KAAtB,EAAT;AACH;;AAhBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAkBA,IAAMV,8BAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKU,KAAN,IAAe,CAACV,KAAKW,EAArB,IAA2B,CAACX,KAAKY,QAArC,EAA+C;AAC3C,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMR;AAAA,2EAAgB,kBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBa,6BADmB,GACX,4BAAgBb,IAAhB,CADW;AAAA;AAAA,+BAEN,wBAAYc,OAAZ,CAAoB,EAAEC,QAAQf,KAAKW,EAAf,EAApB,CAFM;;AAAA;AAEnBK,4BAFmB;;AAAA,4BAGpBA,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIC,wBAAYC,MAAZ,CAAmB;AACrCF,oCAAQf,KAAKW,EADwB;AAErCC,sCAAUZ,KAAKY,QAFsB;AAGrCM,sCAAUlB,KAAKkB,QAHsB;AAIrCR,mCAAOV,KAAKU;AAJyB,yBAAnB,CAJD;;AAAA;AAIfS,+BAJe;AAAA,0DAUd,IAVc;;AAAA;AAAA,0DAad,KAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    // const {idUser, username, fullname, token, email} = json;\r\n    const callcheckreq = await checkreq(req.body);\r\n    if (callcheckreq) {\r\n        return res.status(500).send(\"format should be\")\r\n    }\r\n\r\n    const callcreate = await createnewUser(req.body);\r\n    if (callcreate) {\r\n        console.log(\"create new user complete\");\r\n        res.json({ canAccessDashboard: true });\r\n    }\r\n    else {\r\n        console.log(\"have a user already!!\");\r\n        res.json({ canAccessDashboard: false });\r\n    }\r\n}\r\nexport const checkreq = (body) => {\r\n    if (!body.token || !body.id || !body.username) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (body) => {\r\n    const users = new AuthenUsers(body);\r\n    const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullname,\r\n            token: body.token\r\n        });\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\n// export const authenuserController = async (req, res, next) => {\r\n//         // const json = req.body\r\n//         // const {idUser, username, fullname, token, email} = json;\r\n//         if (!req.body.token||!req.body.idUser||!req.body.username) {\r\n//             res.status(500).send(\"format should be\")\r\n//         }\r\n//         else{\r\n//             const users = new AuthenUser(req.body); \r\n//             const user = await AuthenUser.findOne({idUser: req.body.idUser});\r\n//             if(!user){\r\n//                 const newuser = await AuthenUser.create({\r\n//                 idUser: req.body.idUser,\r\n//                 username: req.body.username,\r\n//                 fullname: req.body.fullname,\r\n//                 token: req.body.token,\r\n//                 email: req.body.email\r\n//             });\r\n//             //res.json(users);\r\n//             console.log(\"add complete\");\r\n//             res.send('<h1>add New dashboard</h1>');\r\n//             }\r\n//             else{\r\n//                 console.log(\"have a user already!!\");\r\n//                 res.send('<h1>dashboard</h1>');\r\n//             }\r\n//         }\r\n\r\n// }\r\n\r\n"]}
>>>>>>> unittest
=======
{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","console","log","body","checkreq","callcheckreq","status","send","users","findOne","idUser","id","user","createnewUser","callcreate","json","canAccessDashboard","token","username","create","fullname","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACA;AACAC,gCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AAHoB;AAAA,+BAIOC,SAASN,IAAIK,IAAb,CAJP;;AAAA;AAIdE,oCAJc;;AAKpBJ,gCAAQC,GAAR,CAAYG,YAAZ;;AALoB,6BAMhBA,YANgB;AAAA;AAAA;AAAA;;AAAA,0DAOTN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAPS;;AAAA;AAUdC,6BAVc,GAUN,4BAAgBV,IAAIK,IAApB,CAVM;AAAA;AAAA,+BAWD,wBAAYM,OAAZ,CAAoB,EAAEC,QAAQZ,IAAIK,IAAJ,CAASQ,EAAnB,EAApB,CAXC;;AAAA;AAWdC,4BAXc;AAAA;AAAA,+BAaKC,cAAcD,IAAd,EAAmBd,IAAIK,IAAvB,CAbL;;AAAA;AAadW,kCAbc;;AAcpB,4BAAIA,UAAJ,EAAgB;AACZb,oCAAQC,GAAR,CAAY,0BAAZ;AACAH,gCAAIgB,IAAJ,CAAS,EAAEC,oBAAoB,IAAtB,EAAT;AACH,yBAHD,MAIK;AACDf,oCAAQC,GAAR,CAAY,uBAAZ;AACAH,gCAAIgB,IAAJ,CAAS,EAAEC,oBAAoB,KAAtB,EAAT;AACH;;AArBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAuBA,IAAMZ;AAAA,2EAAW,kBAAOD,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8BAChB,CAACA,KAAKc,KAAN,IAAe,CAACd,KAAKQ,EAArB,IAA2B,CAACR,KAAKe,QADjB;AAAA;AAAA;AAAA;;AAAA,0DAET,IAFS;;AAAA;AAAA,0DAKT,KALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAQA,IAAML;AAAA,2EAAgB,kBAAOD,IAAP,EAAYT,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGpBS,IAHoB;AAAA;AAAA;AAAA;;AAIfJ,6BAJe,GAIP,4BAAgBL,IAAhB,CAJO;AAAA;AAAA,+BAKC,wBAAYgB,MAAZ,CAAmB;AACrCT,oCAAQP,KAAKQ,EADwB;AAErCO,sCAAUf,KAAKe,QAFsB;AAGrCE,sCAAUjB,KAAKiB,QAHsB;AAIrCH,mCAAOd,KAAKc;AAJyB,yBAAnB,CALD;;AAAA;AAKfI,+BALe;AAAA,0DAWd,IAXc;;AAAA;AAAA,0DAcd,KAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    // const {idUser, username, fullname, token, email} = json;\r\n    console.log(req.body)\r\n    const callcheckreq = await checkreq(req.body);\r\n    console.log(callcheckreq)\r\n    if (callcheckreq) {\r\n        return res.status(500).send(\"format should be\")\r\n    }\r\n\r\n    const users = new AuthenUsers(req.body);\r\n    const user = await AuthenUsers.findOne({ idUser: req.body.id });\r\n\r\n    const callcreate = await createnewUser(user,req.body);\r\n    if (callcreate) {\r\n        console.log(\"create new user complete\");\r\n        res.json({ canAccessDashboard: true });\r\n    }\r\n    else {\r\n        console.log(\"have a user already!!\");\r\n        res.json({ canAccessDashboard: false });\r\n    }\r\n}\r\nexport const checkreq = async (body) => {\r\n    if (!body.token || !body.id || !body.username) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (user,body) => {\r\n    // const users = new AuthenUsers(body);\r\n    // const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const users = new AuthenUsers(body);\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullname,\r\n            token: body.token\r\n        });\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\n// export const authenuserController = async (req, res, next) => {\r\n//         // const json = req.body\r\n//         // const {idUser, username, fullname, token, email} = json;\r\n//         if (!req.body.token||!req.body.idUser||!req.body.username) {\r\n//             res.status(500).send(\"format should be\")\r\n//         }\r\n//         else{\r\n//             const users = new AuthenUser(req.body); \r\n//             const user = await AuthenUser.findOne({idUser: req.body.idUser});\r\n//             if(!user){\r\n//                 const newuser = await AuthenUser.create({\r\n//                 idUser: req.body.idUser,\r\n//                 username: req.body.username,\r\n//                 fullname: req.body.fullname,\r\n//                 token: req.body.token,\r\n//                 email: req.body.email\r\n//             });\r\n//             //res.json(users);\r\n//             console.log(\"add complete\");\r\n//             res.send('<h1>add New dashboard</h1>');\r\n//             }\r\n//             else{\r\n//                 console.log(\"have a user already!!\");\r\n//                 res.send('<h1>dashboard</h1>');\r\n//             }\r\n//         }\r\n\r\n// }\r\n\r\n"]}
>>>>>>> unittest
=======
{"version":3,"sources":["../../src/controller/authenuser.js"],"names":["setRoute","app","post","havedata","req","res","next","console","log","body","checkreq","callcheckreq","status","send","users","findOne","idUser","id","user","createnewUser","callcreate","json","canAccessDashboard","fullname","fullName","token","username","create","newuser"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAAmD;;AAE5C,IAAMA;AAAA,0EAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpBA,4BAAIC,IAAJ,CAAS,aAAT,EAAwBC,QAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAKA,IAAMA;AAAA,2EAAW,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACAC,gCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AAFoB;AAAA,+BAGOC,SAASN,IAAIK,IAAb,CAHP;;AAAA;AAGdE,oCAHc;;AAIpBJ,gCAAQC,GAAR,CAAYG,YAAZ;;AAJoB,6BAKhBA,YALgB;AAAA;AAAA;AAAA;;AAAA,0DAMTN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CANS;;AAAA;AASdC,6BATc,GASN,4BAAgBV,IAAIK,IAApB,CATM;AAAA;AAAA,+BAUD,wBAAYM,OAAZ,CAAoB,EAAEC,QAAQZ,IAAIK,IAAJ,CAASQ,EAAnB,EAApB,CAVC;;AAAA;AAUdC,4BAVc;;AAWpBX,gCAAQC,GAAR,CAAYU,IAAZ;;AAXoB;AAAA,+BAaKC,cAAcD,IAAd,EAAoBd,IAAIK,IAAxB,CAbL;;AAAA;AAadW,kCAbc;;AAcpB,4BAAIA,UAAJ,EAAgB;AACZb,oCAAQC,GAAR,CAAY,0BAAZ;AACA;AACAH,gCAAIgB,IAAJ,CAAS;AACLC,oDAAoB,IADf;AAELC,0CAAUnB,IAAIK,IAAJ,CAASe,QAFd;AAGLC,uCAAOrB,IAAIK,IAAJ,CAASgB;AAHX,6BAAT;AAKH,yBARD,MASK;AACDlB,oCAAQC,GAAR,CAAY,uBAAZ;AACA;AACAH,gCAAIgB,IAAJ,CAAS;AACLC,oDAAoB,KADf;AAELC,0CAAUnB,IAAIK,IAAJ,CAASe,QAFd;AAGLC,uCAAOrB,IAAIK,IAAJ,CAASgB;AAHX,6BAAT;AAKH;;AA/BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;AAiCA,IAAMf,8BAAW,SAAXA,QAAW,CAACD,IAAD,EAAU;AAC9B,QAAI,CAACA,KAAKgB,KAAN,IAAe,CAAChB,KAAKQ,EAArB,IAA2B,CAACR,KAAKiB,QAArC,EAA+C;AAC3C,eAAO,IAAP;AACH,KAFD,MAGK;AACD,eAAO,KAAP;AACH;AACJ,CAPM;AAQA,IAAMP;AAAA,2EAAgB,kBAAOD,IAAP,EAAaT,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGpBS,IAHoB;AAAA;AAAA;AAAA;;AAIfJ,6BAJe,GAIP,4BAAgBL,IAAhB,CAJO;AAAA;AAAA,+BAKC,wBAAYkB,MAAZ,CAAmB;AACrCX,oCAAQP,KAAKQ,EADwB;AAErCS,sCAAUjB,KAAKiB,QAFsB;AAGrCH,sCAAUd,KAAKe,QAHsB;AAIrCC,mCAAOhB,KAAKgB;AAJyB,yBAAnB,CALD;;AAAA;AAKfG,+BALe;AAAA,0DAWd,IAXc;;AAAA;AAAA,0DAcd,KAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"authenuser.js","sourcesContent":["import { AuthenUsers } from '../models/authenuser' //as rename\r\n\r\nexport const setRoute = async (app) => {\r\n    app.post('/authenuser', havedata);\r\n\r\n\r\n}\r\nexport const havedata = async (req, res, next) => {\r\n    // const json = req.body\r\n    console.log(req.body)\r\n    const callcheckreq = await checkreq(req.body);\r\n    console.log(callcheckreq)\r\n    if (callcheckreq) {\r\n        return res.status(500).send(\"format should be\")\r\n    }\r\n\r\n    const users = new AuthenUsers(req.body);\r\n    const user = await AuthenUsers.findOne({ idUser: req.body.id });\r\n    console.log(user)\r\n\r\n    const callcreate = await createnewUser(user, req.body);\r\n    if (callcreate) {\r\n        console.log(\"create new user complete\");\r\n        //add to sprint 2 query data\r\n        res.json({\r\n            canAccessDashboard: true,\r\n            fullname: req.body.fullName,\r\n            token: req.body.token\r\n        });\r\n    }\r\n    else {\r\n        console.log(\"have a user already!!\");\r\n        //add to sprint 2 query data\r\n        res.json({\r\n            canAccessDashboard: false,\r\n            fullname: req.body.fullName,\r\n            token: req.body.token\r\n        });\r\n    }\r\n}\r\nexport const checkreq = (body) => {\r\n    if (!body.token || !body.id || !body.username) {\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\nexport const createnewUser = async (user, body) => {\r\n    // const users = new AuthenUsers(body);\r\n    // const user = await AuthenUsers.findOne({ idUser: body.id });\r\n    if (!user) {\r\n        const users = new AuthenUsers(body)\r\n        const newuser = await AuthenUsers.create({\r\n            idUser: body.id,\r\n            username: body.username,\r\n            fullname: body.fullName,\r\n            token: body.token\r\n        })\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}
>>>>>>> unittest
